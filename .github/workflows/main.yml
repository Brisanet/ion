name: Automated Tests and Linting

on:
  pull_request:
    branches: ['main']

jobs:
  test-prettier-lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.22.1]
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install packages
        run: yarn install --frozen-lockfile

      # - name: Run Tests
      #   run: yarn test:coverage

      - name: Code Climate Test Reporter
        run: |
          mkdir -p tmp/
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
          chmod +x ./tmp/cc-test-reporter

      - name: Run tests
        run: |
          yarn test:coverage
          ./tmp/cc-test-reporter format-coverage -t lcov -o tmp/codeclimate.frontend.json coverage/lcov.info

      - name: Upload coverage
        run: |
          ./tmp/cc-test-reporter sum-coverage tmp/codeclimate.*.json -o tmp/codeclimate.total.json
          ./tmp/cc-test-reporter upload-coverage -i tmp/codeclimate.total.json
        with:
          codeclimate-test-reporter-id: ${{ secrets.CC_TEST_REPORTER_ID }}
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}

        # uses: aktions/codeclimate-test-reporter@v1
        # with:
        #   codeclimate-test-reporter-id: ${{ secrets.CC_TEST_REPORTER_ID }}

      - name: Run Prettier
        run: yarn prettier

      - name: Run Lint
        run: yarn lint

      - name: Run Build
        run: yarn build
